name: 'Build Infrastructure'

on:
  push:
    branches: [ "*" ]
    paths-ignore:
      - '.gitignore'
      - 'README.md'
      - '.github/workflows/**'

permissions:
  contents: read

jobs:
  build:
    name: 'Build Environment'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./backend/terraform

    env:
      TEST_WORKSPACE: 'test'
      PROD_WORKSPACE: 'production'
      TF_WORKSPACE: ${{ env.TEST_WORKSPACE }} # Default to test workspace


    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
        TF_INPUT: false

    # On push to any branch other than "main", apply changes to Test environment
    - name: Terraform Apply to Test Environment
      if: github.ref != 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Add your deployment commands for the test environment here
      env:
        TF_INPUT: false
        TF_WORKSPACE: ${{ env.TEST_WORKSPACE }}

    # On push to "main", apply changes to Prod environment
    - name: Terraform Apply to Prod Environment
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
      env:
        TF_INPUT: false
        TF_WORKSPACE: ${{ env.PROD_WORKSPACE }}
        
  close_pull_request_job:
    name: 'Close Pull Request Job'
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
